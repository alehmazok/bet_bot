# Generated by Django 4.2.18 on 2025-09-21 12:34

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='GameFetchLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fetch_date', models.DateField()),
                ('fetch_datetime', models.DateTimeField(auto_now_add=True)),
                ('success', models.BooleanField()),
                ('games_processed', models.IntegerField(default=0)),
                ('error_message', models.TextField(blank=True, null=True)),
                ('api_url', models.URLField()),
            ],
            options={
                'ordering': ['-fetch_datetime'],
            },
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('team_id', models.IntegerField(help_text='NHL API team ID', unique=True)),
                ('name', models.CharField(help_text='Team name', max_length=100)),
                ('abbreviation', models.CharField(help_text='Team abbreviation', max_length=5)),
                ('logo_url', models.URLField(blank=True, help_text='Team logo URL', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Venue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, unique=True)),
                ('timezone', models.CharField(blank=True, max_length=50, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Game',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('game_id', models.BigIntegerField(help_text='NHL API game ID', unique=True)),
                ('season', models.IntegerField(help_text='Season (e.g., 20252026)')),
                ('game_type', models.IntegerField(choices=[(1, 'Preseason'), (2, 'Regular Season'), (3, 'Playoffs')], help_text='Game type')),
                ('game_date', models.DateField(help_text='Game date')),
                ('start_time_utc', models.DateTimeField(help_text='Game start time in UTC')),
                ('eastern_utc_offset', models.CharField(blank=True, max_length=10, null=True)),
                ('venue_utc_offset', models.CharField(blank=True, max_length=10, null=True)),
                ('venue_timezone', models.CharField(blank=True, max_length=50, null=True)),
                ('game_state', models.CharField(choices=[('FUT', 'Future'), ('PRE', 'Pre-Game'), ('LIVE', 'Live'), ('CRIT', 'Critical'), ('FINAL', 'Final'), ('OFF', 'Official')], max_length=10)),
                ('game_schedule_state', models.CharField(default='OK', max_length=20)),
                ('neutral_site', models.BooleanField(default=False)),
                ('home_team_score', models.IntegerField(blank=True, null=True)),
                ('away_team_score', models.IntegerField(blank=True, null=True)),
                ('home_team_sog', models.IntegerField(blank=True, help_text='Shots on goal', null=True)),
                ('away_team_sog', models.IntegerField(blank=True, help_text='Shots on goal', null=True)),
                ('home_team_record', models.CharField(blank=True, max_length=20, null=True)),
                ('away_team_record', models.CharField(blank=True, max_length=20, null=True)),
                ('game_center_link', models.CharField(blank=True, max_length=200, null=True)),
                ('tickets_link', models.URLField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('away_team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='away_games', to='nhl_data.team')),
                ('home_team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='home_games', to='nhl_data.team')),
                ('venue', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='nhl_data.venue')),
            ],
            options={
                'ordering': ['-game_date', '-start_time_utc'],
            },
        ),
        migrations.CreateModel(
            name='TVBroadcast',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('broadcast_id', models.IntegerField()),
                ('market', models.CharField(choices=[('H', 'Home'), ('A', 'Away'), ('N', 'National')], max_length=1)),
                ('country_code', models.CharField(max_length=2)),
                ('network', models.CharField(max_length=50)),
                ('sequence_number', models.IntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tv_broadcasts', to='nhl_data.game')),
            ],
            options={
                'ordering': ['sequence_number'],
                'unique_together': {('game', 'broadcast_id')},
            },
        ),
        migrations.AddIndex(
            model_name='game',
            index=models.Index(fields=['game_date'], name='nhl_data_ga_game_da_021f2f_idx'),
        ),
        migrations.AddIndex(
            model_name='game',
            index=models.Index(fields=['game_state'], name='nhl_data_ga_game_st_5b6087_idx'),
        ),
        migrations.AddIndex(
            model_name='game',
            index=models.Index(fields=['season', 'game_type'], name='nhl_data_ga_season_56e99d_idx'),
        ),
    ]
